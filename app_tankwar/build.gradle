plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

kapt {
    correctErrorTypes true
}

android {
    compileSdk = BuildConfig.COMPILE_SDK

    defaultConfig {
        applicationId "com.focus617.tankwar"
        minSdk = BuildConfig.MIN_SDK
        targetSdk = BuildConfig.TARGET_SDK
        versionCode = BuildConfig.versionCodeMobile
        versionName = BuildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
    compileOptions {
        sourceCompatibility = BuildConfig.javaVersion
        targetCompatibility = BuildConfig.javaVersion
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    api project(':myAndroidLibrary')
    api project(':myLib')

    implementation(Jetpack.ANDROIDX_CORE)
    implementation(Jetpack.APPCOMPAT)
    implementation(Jetpack.MATERIAL)
    implementation(Jetpack.CONSTRAINTLAYOUT)

    // ViewModel and LiveData
    implementation(Jetpack.LIFECYCLE_LIVEDATA_KTX)
    implementation(Jetpack.LIFECYCLE_VIEWMODEL_KTX)
    // ViewModel utilities for Compose
    implementation(Jetpack.LIFECYCLE_VIEWMODEL_COMPOSE)
    // Saved state module for ViewModel
    implementation(Jetpack.LIFECYCLE_VIEWMODEL_SAVEDSTATE)

    // Navigation
    implementation(Jetpack.NAVIGATION_FRAGMENT_KTX)
    implementation(Jetpack.NAVIGATION_UI_KTX)

    // Room
    implementation(Jetpack.ROOM_RUNTIME)
    implementation 'androidx.preference:preference:1.1.1'
    implementation project(path: ':myLib')
    kapt(Jetpack.ROOM_COMPILER)
    // Kotlin Extensions and Coroutines support for Room
    implementation(Jetpack.ROOM_KTX)
    // optional - Test helpers
    testImplementation(Jetpack.ROOM_TESTING)

    // Coroutines
    implementation(Kotlin.COROUTINES_CORE)
    implementation(Kotlin.COROUTINES_ANDROID)

    // Timber log
    implementation(Libs.TIMBER)
  
    // Moshi
    implementation(Libs.MOSHI)
    implementation(Libs.MOSHI_KOTLIN)
    // Retrofit with Moshi Converter
    implementation(Libs.RETROFIT2_MOSHI_CONVERTER)
    // Retrofit library that integrates coroutines.
    implementation(Libs.RETROFIT2_KOTLIN_COROUTINES_ADAPTER)

    // Hilt
    implementation(Kotlin.HILT_ANDROID)
    kapt(Kotlin.HILT_ANDROID_COMPILER)

    // Test
    testImplementation(Testing.JUNIT)
    testImplementation(Testing.MOCKITO)
    testImplementation(Testing.ROBOLECTRIC)

    // AndroidX Test - JVM testing
    testImplementation(Testing.ANDROIDX_TEST_CORE)

    // AndroidJUnitRunner and JUnit Rules
    testImplementation(Testing.ANDROIDX_TEST_RUNNER)
    testImplementation(Testing.ANDROIDX_TEST_RULE)

    // Coroutines
    testImplementation(Kotlin.COROUTINES_TEST)

    // Assertions
    testImplementation(Testing.ANDROIDX_TEST_JUNIT)
    testImplementation(Testing.ANDROIDX_TEST_TRUTH)
    testImplementation(Testing.HAMCREST)
    testImplementation(Testing.GOOGLE_TRUTH)

    //Hilt
    testImplementation(Kotlin.HILT_ANDROID_TESTING)
    kaptTest(Kotlin.HILT_COMPILER)

    // Core library
    androidTestImplementation(Testing.ANDROIDX_TEST_CORE)
    androidTestImplementation(Testing.ANDROIDX_CORE_TEST)

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation(Testing.ANDROIDX_TEST_RULE)

    // Assertions
    androidTestImplementation(Testing.ANDROIDX_TEST_JUNIT)
    androidTestImplementation(Testing.ANDROIDX_TEST_TRUTH)

    // Espresso dependencies
    androidTestImplementation(Testing.ANDROIDX_TEST_ESPRESSO)

    // Coroutines
    androidTestImplementation(Kotlin.COROUTINES_TEST)
}